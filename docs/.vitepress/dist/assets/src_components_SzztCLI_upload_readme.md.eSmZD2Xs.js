import{at as s,p as i,m as a,aP as t}from"./chunks/framework.5E6THvKO.js";const g=JSON.parse('{"title":"szzt upload","description":"","frontmatter":{},"headers":[],"relativePath":"src/components/SzztCLI/upload/readme.md","filePath":"src/components/SzztCLI/upload/readme.md"}'),l={name:"src/components/SzztCLI/upload/readme.md"},n=t(`<h1 id="szzt-upload" tabindex="-1">szzt upload <a class="header-anchor" href="#szzt-upload" aria-label="Permalink to &quot;szzt upload&quot;">​</a></h1><p>该指令实现将静态资源文件批量上传至文件系统的指定ID文件夹中。</p><ol><li>该脚本会扫描项目文件路径/public/static/images下的文件夹。</li><li>用户以勾选的交互形式选择需要上传的文件夹</li><li>再与输入的文件系统ID中的文件列表进行文件名称的对比</li><li>通过对比结果区分出已上传文件和未上传文件</li><li>最后将未上传的文件上传到文件系统</li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-node vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">node</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>szzt upload</span></span></code></pre></div><h2 id="需求背景" tabindex="-1">需求背景 <a class="header-anchor" href="#需求背景" aria-label="Permalink to &quot;需求背景&quot;">​</a></h2><p>当项目需要上架至IRS平台,然后项目的静态资源过于庞大,需要迁移至文件系统。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>用该指令完成迁移功能后,如果是上传的文件名称添加了文件夹前缀，那么还需要调整静态资源引用的函数。 可以在imgPath上批量处理 &#39;/&#39;于&#39;-&#39;的转化</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 调整前  --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">imgPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;home/icon-add.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 调整后 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">imgPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;home-icon-add.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div></div><h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h2><ol><li>扫描项目文件路径/public/static/images下的文件夹。</li><li>用户以勾选的交互形式选择需要上传的文件夹</li><li>再与输入的文件系统ID中的文件列表进行比对</li><li>通过对比结果得出已上传文件和未上传文件</li><li>避免出现文件命名一致的情况，可以选择对文件进行重命名操作，每个文件前都添加文件夹的前缀。</li></ol><p>比如文件名称为icon-add.png,文件夹为home,那么重命名后的文件名称为home-icon-add.png</p><ol start="6"><li>将文件上传至文件系统</li><li>等全部上传完毕后删除临时文件夹</li></ol>`,12),e=[n];function h(p,k,d,o,r,E){return a(),i("div",null,e)}const u=s(l,[["render",h]]);export{g as __pageData,u as default};
